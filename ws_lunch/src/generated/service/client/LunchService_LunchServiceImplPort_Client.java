
package generated.service.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2013-08-10T14:57:53.454-06:00
 * Generated source version: 2.7.6
 * 
 */
public final class LunchService_LunchServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://service.csc380.neumont.edu/", "LunchService");

    private LunchService_LunchServiceImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = LunchService_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        LunchService_Service ss = new LunchService_Service(wsdlURL, SERVICE_NAME);
        LunchService port = ss.getLunchServiceImplPort();

        System.out.println("Welcome to Wes' Lunch Ordering System!!!");

        Scanner scan = new Scanner(System.in);
        Restaurant restaurant = getRestaurant(port, scan);
        String name = getStudentName(scan);
        List<String> selections = getMenuSelections(port, scan, restaurant);

        boolean success = port.placeOrder(restaurant.getName(), name, selections);

        if(success){
            System.out.println("Thank you for placing your order");
        } else{
            System.out.println("Order failed, try again later");
        }

        System.exit(0);
    }

    private static Restaurant getRestaurant(LunchService port, Scanner scan){
        List<Restaurant> restaurants = port.getRestaurants();
        System.out.println("Pick a Restaurant:");
        for(int i = 0; i < restaurants.size(); i ++){
            System.out.println(" " + (i+1) + ") " + restaurants.get(i).getName());
        }
        String input = scan.nextLine();
        Restaurant restaurant = restaurants.get(Integer.parseInt(input) - 1);
        return restaurant;
    }

    private static String getStudentName(Scanner scan){
        System.out.println("Enter your name:");
        String name = scan.nextLine();
        return name;
    }

    private static List<String> getMenuSelections(LunchService port, Scanner scan, Restaurant restaurant){
        List<String> menuItems = port.getMenuItems(restaurant);
        List<String> selections = new ArrayList<String>();
        boolean running = true;
        while(running){
            System.out.println("What would you like from " + restaurant.getName() + "?" );
            for(int i = 0; i < menuItems.size() - 1; i ++){
                System.out.println(" " + i + ") " + menuItems.get(i));
            }
            String input = scan.nextLine();
            selections.add(menuItems.get(Integer.parseInt(input)));
            System.out.println("Order more? y/n");
            input = scan.nextLine();
            if(input.equals("y")){
                running = false;
            }
        }
        return selections;
    }

}
